{"ast":null,"code":"import * as ShoppingListActions from './shopping-list.action';\nconst initialState = {\n  ingredients: [],\n  editedIngredient: null,\n  editedIngredientIndex: -1\n};\nexport function shoppingListReducer(state = initialState, action) {\n  switch (action.type) {\n    case ShoppingListActions.ADD_INGREDIENT:\n      return Object.assign(Object.assign({}, state), {\n        ingredients: [...state.ingredients, action.payload]\n      });\n\n    case ShoppingListActions.ADD_INGREDIENTS:\n      return Object.assign(Object.assign({}, state), {\n        ingredients: [...state.ingredients, ...action.payload]\n      });\n\n    case ShoppingListActions.UPDATE_INGREDITENT:\n      const ingredient = state.ingredients[state.editedIngredientIndex];\n      const ingredients = [...state.ingredients];\n      const updatedIngredent = Object.assign(Object.assign({}, ingredient), action.payload);\n      ingredients[state.editedIngredientIndex] = updatedIngredent;\n      return Object.assign(Object.assign({}, state), {\n        ingredients: ingredients,\n        editedIngredient: null,\n        editedIngredientIndex: -1\n      });\n\n    case ShoppingListActions.DELETE_INGREDIENT:\n      return Object.assign(Object.assign({}, state), {\n        ingredients: [...state.ingredients].filter((ingredient, index) => {\n          return index !== state.editedIngredientIndex;\n        })\n      });\n\n    case ShoppingListActions.START_EDIT:\n      return Object.assign(Object.assign({}, state), {\n        editedIngredient: Object.assign({}, state.ingredients[action.payload]),\n        editedIngredientIndex: action.payload\n      });\n\n    case ShoppingListActions.STOP_EDIT:\n      return Object.assign(Object.assign({}, state), {\n        editedIngredient: null,\n        editedIngredientIndex: -1\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n}","map":null,"metadata":{},"sourceType":"module"}