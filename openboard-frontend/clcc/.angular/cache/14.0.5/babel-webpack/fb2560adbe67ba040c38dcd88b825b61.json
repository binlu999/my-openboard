{"ast":null,"code":"import { map, take } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngrx/store\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, store) {\n      this.router = router;\n      this.store = store;\n    }\n\n    canActivate(route, state) {\n      return this.store.select('auth').pipe(take(1), map(authState => {\n        return authState.user;\n      }), map(user => {\n        const isAuth = !!user;\n\n        if (isAuth) {\n          return true;\n        } else {\n          return this.router.createUrlTree(['/auth']);\n        }\n      }));\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.Store));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}