{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { ReceipeAddReceipe, ReceipeUpdateReceipe } from '../store/receipe.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction ReceipeEditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵelement(2, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵelement(4, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 22)(6, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ReceipeEditComponent_div_33_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onDeleteIngredient(i_r3));\n    });\n    i0.ɵɵtext(7, \"X\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n  }\n}\n\nexport let ReceipeEditComponent = /*#__PURE__*/(() => {\n  class ReceipeEditComponent {\n    constructor(route, router, store) {\n      this.route = route;\n      this.router = router;\n      this.store = store;\n      this.editMode = false;\n    }\n\n    ngOnDestroy() {\n      if (this.storeSub) {\n        this.storeSub.unsubscribe();\n      }\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = +params['id'];\n        this.editMode = params['id'] != null;\n        this.initForm();\n      });\n    }\n\n    initForm() {\n      let name = \"\";\n      let description = \"\";\n      let imagePath = \"\";\n      let ingredients = new FormArray([]);\n\n      if (this.editMode) {\n        this.storeSub = this.store.select('receipes').pipe(map(receipeState => {\n          return receipeState.receipes.find((receipe, index) => {\n            return this.id === index;\n          });\n        })).subscribe(receipe => {\n          name = receipe.name;\n          description = receipe.description;\n          imagePath = receipe.imagePath;\n\n          if (receipe['ingredients']) {\n            for (const ingredient of receipe.ingredients) {\n              ingredients.push(new FormGroup({\n                'name': new FormControl(ingredient.name, Validators.required),\n                'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n              }));\n            }\n          }\n        });\n      }\n\n      this.receipeForm = new FormGroup({\n        'name': new FormControl(name, Validators.required),\n        'description': new FormControl(description, Validators.required),\n        'imagePath': new FormControl(imagePath, Validators.required),\n        'ingredients': ingredients\n      });\n    }\n\n    get controls() {\n      return this.receipeForm.get('ingredients').controls;\n    }\n\n    onSubmit() {\n      console.log(this.receipeForm.value);\n\n      if (this.editMode) {\n        this.store.dispatch(new ReceipeUpdateReceipe({\n          index: this.id,\n          receipe: this.receipeForm.value\n        }));\n      } else {\n        this.store.dispatch(new ReceipeAddReceipe(this.receipeForm.value));\n      }\n\n      this.onCancel();\n    }\n\n    onAddIngredient() {\n      this.receipeForm.get('ingredients').push(new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      }));\n    }\n\n    onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n\n    onDeleteIngredient(index) {\n      this.receipeForm.get('ingredients').removeAt(index); //Clear all\n      // (<FormArray>this.receipeForm.get('ingredients')).clear();\n    }\n\n  }\n\n  ReceipeEditComponent.ɵfac = function ReceipeEditComponent_Factory(t) {\n    return new (t || ReceipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Store));\n  };\n\n  ReceipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReceipeEditComponent,\n    selectors: [[\"app-receipe-edit\"]],\n    decls: 39,\n    vars: 4,\n    consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"description\"], [\"name\", \"description\", \"id\", \"description\", \"rows\", \"6\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"imagePath\"], [\"type\", \"text\", \"id\", \"imagePath\", \"formControlName\", \"imagePath\", 1, \"form-control\"], [\"imagePathRef\", \"\"], [1, \"img-responsive\", 3, \"src\"], [\"formArrayName\", \"ingredients\", 1, \"col-xs-12\"], [\"class\", \"row\", \"style\", \"margin-top: 10px;\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"row\", 2, \"margin-top\", \"10px\", 3, \"formGroupName\"], [1, \"col-xs-6\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [1, \"col-xs-4\"], [\"type\", \"number\", \"formControlName\", \"amount\", 1, \"form-control\"], [1, \"col-xs-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function ReceipeEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ReceipeEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"button\", 3);\n        i0.ɵɵtext(6, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ReceipeEditComponent_Template_button_click_7_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(8, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 1)(11, \"div\", 5)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"div\", 5)(18, \"label\", 8);\n        i0.ɵɵtext(19, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"textarea\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 0)(22, \"div\", 1)(23, \"div\", 5)(24, \"label\", 10);\n        i0.ɵɵtext(25, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 11, 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 0)(29, \"div\", 1);\n        i0.ɵɵelement(30, \"img\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 0)(32, \"div\", 14);\n        i0.ɵɵtemplate(33, ReceipeEditComponent_div_33_Template, 8, 1, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(34, \"hr\");\n        i0.ɵɵelementStart(35, \"div\", 0)(36, \"div\", 1)(37, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ReceipeEditComponent_Template_button_click_37_listener() {\n          return ctx.onAddIngredient();\n        });\n        i0.ɵɵtext(38, \"Add Ingredient\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(27);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.receipeForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.receipeForm.valid);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"src\", _r0.value, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.controls);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.NgForOf],\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1px solid red}\"]\n  });\n  return ReceipeEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}